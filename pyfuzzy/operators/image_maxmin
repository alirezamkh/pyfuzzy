import numpy as np

def image_maxmin( R, A):
 if not isinstance(A, dict):
    raise TypeError("A should be a dictionary.")
 if not isinstance(R,dict):
    raise TypeError("R should be a dictionary.")


 for key in A.keys():
      try:
            val = float(A.get(key, 0))
            if not (0 <= val <= 1):
                raise TypeError("mfA(" + str(key) + "):=> '" + str(val) + "' is not between 0 and 1 ")
      except ValueError:
            raise TypeError(A.get(key, 0) + " should be float.")

 for key, value in A.items():
        try:
            val = float(value)
            if not (0 <= val <= 1):
                raise TypeError("mfA(" + str(key) + "):=> '" + str(value) + "' is not between [0,1] ")
        except ValueError:
            raise TypeError("mfA(" + str(key) + "):=> '" + value + "' is not a float!")



 row = int(len(A))
 col = int(len(R)/len(A))

 Mtx_R = list(R.values())
 Mrx_R = np.asarray(Mrx_R)
 Mrx_R = Mrx_R.reshape(row, col)

 resulte = dict()
 temp = dict()
 for j in range(int(len(R)/len(A))):
    for i in range(int(len(A))):
       temp[i+1]=min(A.get(i+1,0), Mrx_R[i][j])
       resulte[j+1] = max(temp.values())


 return resulte
