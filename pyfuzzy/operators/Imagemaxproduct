def image_maxmin( R,B):
 if not isinstance(B, dict):
    raise TypeError("B should be a dictionary.")
 if not isinstance(R[0],list):
    raise TypeError("R should be a matrix.")


 for i in range(len(R) - 1):
    if (len(R[i] != len(R[i + 1]))):
            raise TypeError("R should be a matrix.")


 for key in B.keys():
      try:
            val = float(B.get(key, 0))
            if not (0 <= val <= 1):
                raise TypeError("mfA(" + str(key) + "):=> '" + str(val) + "Should be between 0 and 1 ")
      except ValueError:
            raise TypeError(B.get(key, 0) + " should be float.")

 for key, value in B.items():
        try:
            val = float(value)
            if not (0 <= val <= 1):
                raise TypeError("mfB(" + str(key) + "): " + str(value) + "Should be between 0 and 1 [0,1] ")
        except ValueError:
            raise TypeError("mfB(" + str(key) + "): " + value + "' is not a float!")

 resulte = dict()
 for j in range(len(R[0])):
   for i in range(len(R)):
      resulte[j] = max((B.get(i, 0))*( R[i][j]))

 return resulte
